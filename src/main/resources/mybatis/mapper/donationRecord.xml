<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.mapper.DonationRecordMapper">
    <select id="getDonationRecordByUserIdAndProjectId" resultType="com.example.demo.entity.DonationRecord">
        select donationRecordId,userId, projectId,donationNumber,donationAmount,donorName
        from donation_record
        where userId = #{userId} and projectId = #{projectId}
    </select>
    <insert id="addDonationRecord" parameterType="com.example.demo.entity.DonationRecord">
        INSERT INTO donation_record (userId, projectId,donationNumber,donationAmount,donorName)
        VALUES (#{userId}, #{projectId},#{donationNumber},#{donationAmount},#{donorName})
    </insert>
    <update id="updateDonationRecord" parameterType="com.example.demo.entity.DonationRecord">
        update donation_record
        set donationNumber = #{donationNumber},
        donationAmount = #{donationAmount}
        where userId = #{userId} and projectId = #{projectId}
    </update>
    <select id="getDonationRecordByUserId" resultType="com.example.demo.entity.DonationRecord">
        select donationRecordId,userId, projectId,donationNumber,donationAmount,donorName
        from donation_record
        where userId = #{userId}
    </select>
    <select id="getDonationUserNum" resultType="java.lang.Integer">
        SELECT  COUNT(DISTINCT(userId)) as num from donation_record
    </select>
    <select id="getDonationAverage" resultType="java.lang.Double">
        SELECT  SUM(donationAmount)/COUNT(DISTINCT(userId)) from donation_record
    </select>
    <select id="getTopUser" resultType="com.example.demo.dto.HomeRankListDTO">
    SELECT u.nickName name,u.avatarPath avatar,d.value
    FROM `user` u,(SELECT SUM(donationAmount) value,userId from donation_record GROUP BY userId) d
    WHERE u.userId=d.userId order by d.value desc LIMIT 5
    </select>

    <select id="getDonationNums" resultType="java.lang.Double">
       SELECT
	n.num / COUNT(DISTINCT(userId)) AS ratio
    FROM
	donation_record d,
	(
		SELECT
			COUNT(*) AS num
		FROM
			(
				SELECT
					COUNT(DISTINCT(userId))
				FROM
					donation_record
				GROUP BY
					userId
				HAVING
					sum(donationNumber)
        <if test="end!= 0">
					BETWEEN #{start} AND #{end}
        </if>
        <if test="end== 0">
                    > #{start}
        </if>
			) a
	) n
    </select>

    <select  id="getDonationRatio" resultType="java.lang.Double">
		SELECT
			COUNT(*) AS num
		FROM
			(
				SELECT
					COUNT(DISTINCT(userId))
				FROM
					donation_record
				GROUP BY
					userId
				HAVING
					sum(donationAmount)
        <if test="end!= 0">
            BETWEEN #{start} AND #{end}
        </if>
        <if test="end== 0">
            >#{start}
        </if>
			) a
    </select>
</mapper>